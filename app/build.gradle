group 'JMarkPad'
version '2.1.1'
apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 1.9

mainClassName = "ui.UI"

repositories {
    jcenter()
    mavenCentral()
}

dependencies {

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'

    // https://mvnrepository.com/artifact/com.jfoenix/jfoenix
    compile group: 'com.jfoenix', name: 'jfoenix', version: '9.0.1'
    // https://mvnrepository.com/artifact/com.github.rjeschke/txtmark
    compile group: 'com.github.rjeschke', name: 'txtmark', version: '0.13'

}

ext.moduleName = 'com.jfoenix'
compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}
jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-class': 'ui.UI'
        )
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    baseName = project.name
}

def java_home = System.getenv('JAVA_HOME')
task link(type: Exec) {
    dependsOn 'clean'
    dependsOn 'jar'

    workingDir 'build'

    ext.appModulePaths = configurations.compile*.absolutePath.join(';')

    executable "${java_home}/bin/jlink"
    args = ['--module-path', (["$java_home/jmods"] + ext.appModulePaths).grep().join("${File.pathSeparatorChar}"),
            '--add-modules', 'app',
            '--launcher', 'app=app/ui.UI',
            '--output', 'dist',
            '--compress=2',
            '--strip-debug',
            '--no-header-files',
            '--no-man-pages'
    ]
    logger.lifecycle commandLine.join(' ')



}
